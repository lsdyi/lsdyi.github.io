{"version":3,"sources":["com/MyHeader.js","com/CheckBoard copy.js","com/Wrapper.js","reportWebVitals.js","index.js"],"names":["MyHeader","href","onClick","this","modeChoose","bind","className","props","clickedMode","flag","console","log","onChangeClickedMode","React","Component","Checkboard","matrix","i","n","push","j","state","now","first","record","regret_record","choose","regret","revoke","togglechoose","map","itemi","indexi","length","itemj","indexj","getClass","setCheckStatus","width","height","handleClickCanvas","item","index","x","y","radius","fill","colorOfCanvasplot","call","stroke","e","evt","offsetY","offsetX","Math","floor","setState","ar","status","temp_1","temp_2","setTimeout","alert","location","reload","temp_1y","temp_2y","examine","human_computer","len","temp","pop","hm","values","element","code","color","k","num","o","max","goalx","goaly","Wrapper","handleChangeClickedMode","value","dsad","forceUpdate","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.847fad3f.chunk.js","sourcesContent":["import React from 'react';\r\nclass MyHeader extends React.Component {\r\n  constructor() {\r\n    super();\r\n  }\r\n  render() {\r\n    return (\r\n      <header>\r\n        <section>\r\n          <a href='https://github.com/lsdyi/lsdyi.github.io'>仓库地址</a>\r\n        </section>\r\n        <section>\r\n          <a onClick={this.modeChoose.bind(this, 4)}>模式选择</a>\r\n          <ul className={this.props.clickedMode == 4 ? 'show' : 'hidden'}>\r\n            <li onClick={this.modeChoose.bind(this, 1)}>双人对战</li>\r\n            <li onClick={this.modeChoose.bind(this, 2)}>挑战人机</li>\r\n            <li onClick={this.modeChoose.bind(this, 3)}>取消</li>\r\n          </ul>\r\n        </section>\r\n      </header>\r\n    );\r\n  }\r\n\r\n  modeChoose(flag) {\r\n    console.log(flag, this);\r\n    this.props.onChangeClickedMode(flag);\r\n  }\r\n}\r\n\r\nexport default MyHeader;\r\n","import React from 'react';\r\n\r\nimport { Stage, Layer, Group, Rect, Circle } from 'react-konva';\r\nimport Konva from 'konva';\r\n\r\nimport './CheckBoard.css';\r\nclass Checkboard extends React.Component {\r\n  // n是棋局的长宽大小\r\n  constructor(props) {\r\n    super(props);\r\n    this.matrix = [];\r\n    for (let i = 0; i < this.props.n; i++) {\r\n      this.matrix.push([]);\r\n      for (let j = 0; j < this.props.n; j++) {\r\n        this.matrix[i].push(0);\r\n      }\r\n    }\r\n\r\n    // matrix是棋局的状态 为1表示下了白棋 为-1表示下的是黑棋 为0表示还没有下棋\r\n\r\n    /* \r\n      record是下棋子的记录 具有栈的特性 用于悔棋 其中的元素一个三元数组\r\n      i，j，status 表示status棋手在（i，j）位置下棋\r\n    */\r\n\r\n    // regret_record是悔棋记录 也是栈的特性 用于撤销悔棋，其中的元素也是三元组\r\n\r\n    // choose表示是用dom视觉呈现还是用canvas视觉呈现 1为dom，2为canvas\r\n    this.state = {\r\n      matrix: this.matrix,\r\n      now: this.props.first,\r\n      record: [],\r\n      regret_record: [],\r\n      choose: 1,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='container'>\r\n        <div className='left'>\r\n          <h1>\r\n            黑棋选手：\r\n            <br />\r\n            用户\r\n            {this.state.now == -1 ? '下棋' : '等待'}\r\n          </h1>\r\n          <div className={this.props.clickedMode != 1 ? 'hidden' : ''}>\r\n            <button className='revoke' onClick={this.regret.bind(this, -1)}>\r\n              我要悔棋\r\n            </button>\r\n            <button className='revoke' onClick={this.revoke.bind(this, -1)}>\r\n              算了还是不悔了\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className='middle'>\r\n          <div className='choosebuttons'>\r\n            <button\r\n              onClick={this.togglechoose.bind(this, 1)}\r\n              className={`choose ${this.state.choose == 1 ? 'beenchosen' : ''}`}\r\n            >\r\n              dom\r\n            </button>\r\n            <button\r\n              onClick={this.togglechoose.bind(this, 2)}\r\n              className={`choose ${this.state.choose == 2 ? 'beenchosen' : ''}`}\r\n            >\r\n              canvas\r\n            </button>\r\n          </div>\r\n          <div\r\n            className={`dom border ${this.state.choose == 1 ? '' : 'hidden'}`}\r\n          >\r\n            {this.state.matrix.map((itemi, indexi) => {\r\n              if (indexi == this.state.matrix.length - 1) {\r\n                return;\r\n              }\r\n              return (\r\n                <div className='recrow'>\r\n                  {itemi.map((itemj, indexj) => {\r\n                    if (indexj == itemi.length - 1) {\r\n                      return (\r\n                        <div className='enough' key={indexi + '' + indexj}>\r\n                          <pre> </pre>\r\n                          <div\r\n                            className={`dot ${this.getClass(\r\n                              this.state.matrix[indexi][indexj]\r\n                            )}`}\r\n                            onClick={this.setCheckStatus.bind(\r\n                              this,\r\n                              indexi,\r\n                              indexj,\r\n                              this.state.now\r\n                            )}\r\n                          ></div>\r\n                        </div>\r\n                      );\r\n                    }\r\n                    return (\r\n                      <div className='rec' key={indexi + '' + indexj}>\r\n                        <pre> </pre>\r\n                        <div\r\n                          className={`dot ${this.getClass(\r\n                            this.state.matrix[indexi][indexj]\r\n                          )}`}\r\n                          onClick={this.setCheckStatus.bind(\r\n                            this,\r\n                            indexi,\r\n                            indexj,\r\n                            this.state.now\r\n                          )}\r\n                        ></div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <Stage\r\n            width={500}\r\n            height={500}\r\n            className={`mycanvas border ${\r\n              this.state.choose == 2 ? '' : 'hidden'\r\n            }`}\r\n            onClick={this.handleClickCanvas.bind(this)}\r\n          >\r\n            <Layer>\r\n              {this.state.matrix.map((item, index) => {\r\n                return item.map((itemj, indexj) => {\r\n                  if (\r\n                    index == this.matrix.length - 1 ||\r\n                    indexj == item.length - 1\r\n                  ) {\r\n                    return (\r\n                      <Circle\r\n                        key={index + ' ' + indexj}\r\n                        x={14 + indexj * 52}\r\n                        y={14 + index * 52}\r\n                        radius={14}\r\n                        fill={this.colorOfCanvasplot.call(this, index, indexj)}\r\n                      />\r\n                    );\r\n                  }\r\n                  return (\r\n                    <Group key={index + ' ' + indexj}>\r\n                      <Rect\r\n                        x={14 + indexj * 52}\r\n                        y={14 + index * 52}\r\n                        height={52}\r\n                        width={52}\r\n                        stroke='black'\r\n                      />\r\n\r\n                      <Circle\r\n                        x={14 + indexj * 52}\r\n                        y={14 + index * 52}\r\n                        radius={14}\r\n                        fill={this.colorOfCanvasplot.call(this, index, indexj)}\r\n                      />\r\n                    </Group>\r\n                  );\r\n                });\r\n              })}\r\n            </Layer>\r\n          </Stage>\r\n        </div>\r\n\r\n        <div className='right'>\r\n          <h1>\r\n            白棋选手：\r\n            <br />\r\n            {this.props.clickedMode != 1 ? '计算机' : '用户'}\r\n            {this.state.now == 1 ? '下棋' : '等待'}\r\n          </h1>\r\n          <div className={this.props.clickedMode != 1 ? 'hidden' : ''}>\r\n            <button className='revoke' onClick={this.regret.bind(this, 1)}>\r\n              我要悔棋\r\n            </button>\r\n            <button className='revoke' onClick={this.revoke.bind(this, 1)}>\r\n              算了还是不悔了\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleClickCanvas(e) {\r\n    let x = e.evt.offsetY;\r\n    let y = e.evt.offsetX;\r\n    // console.log(x, y);\r\n    let [i, j] = [Math.floor((x + 14) / 52), Math.floor((y + 14) / 52)];\r\n\r\n    this.setCheckStatus(i, j, this.state.now);\r\n  }\r\n\r\n  colorOfCanvasplot(i, j) {\r\n    if (this.state.matrix[i][j] == 1) {\r\n      return 'white';\r\n    } else if (this.state.matrix[i][j] == -1) {\r\n      return 'black';\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n  togglechoose(choose) {\r\n    this.setState({\r\n      choose: choose,\r\n    });\r\n  }\r\n\r\n  getClass(item) {\r\n    if (item == 0) {\r\n      return '';\r\n    } else if (item == 1) {\r\n      return 'white';\r\n    } else {\r\n      return 'black';\r\n    }\r\n  }\r\n  // 渲染二维数组 我yue了\r\n  help(ar, i) {\r\n    return ar.map((item, index) => {\r\n      return (\r\n        <span\r\n          className={this.getClass(item)}\r\n          key={index}\r\n          onClick={this.setCheckStatus.bind(this, i, index, this.state.now)}\r\n        ></span>\r\n      );\r\n    });\r\n  }\r\n\r\n  // 检验棋局是否有胜负\r\n  examine(i, j, status) {\r\n    // 第1个方向 0度方向\r\n    let temp_1 = j;\r\n    let temp_2 = j;\r\n    while (this.state.matrix[i][temp_1] == status && temp_1) {\r\n      temp_1 -= 1;\r\n    }\r\n    if (this.state.matrix[i][temp_1] != status) {\r\n      temp_1 += 1;\r\n    }\r\n\r\n    while (\r\n      this.state.matrix[i][temp_2] == status &&\r\n      temp_2 < this.props.n - 1\r\n    ) {\r\n      temp_2 += 1;\r\n    }\r\n    if (this.state.matrix[i][temp_2] != status) {\r\n      temp_2 -= 1;\r\n    }\r\n    console.log(temp_1, temp_2);\r\n    if (temp_2 - temp_1 + 1 >= 5) {\r\n      setTimeout(() => {\r\n        alert('获胜者出现啦！是' + (status == 1 ? '白棋选手' : '黑棋选手'));\r\n        location.reload();\r\n      });\r\n    }\r\n\r\n    // 第2个方向 90度方向\r\n    temp_1 = i;\r\n    temp_2 = i;\r\n    while (this.state.matrix[temp_1][j] == status && temp_1) {\r\n      temp_1 -= 1;\r\n    }\r\n    if (this.state.matrix[temp_1][j] != status) {\r\n      temp_1 += 1;\r\n    }\r\n\r\n    while (\r\n      this.state.matrix[temp_2][j] == status &&\r\n      temp_2 < this.props.n - 1\r\n    ) {\r\n      temp_2 += 1;\r\n    }\r\n    if (this.state.matrix[temp_2][j] != status) {\r\n      temp_2 -= 1;\r\n    }\r\n\r\n    console.log(temp_1, temp_2);\r\n    if (temp_2 - temp_1 + 1 >= 5) {\r\n      setTimeout(() => {\r\n        alert('获胜者出现啦！是' + (status == 1 ? '白棋选手' : '黑棋选手'));\r\n        location.reload();\r\n      });\r\n    }\r\n\r\n    // 第3个方向 45度方向\r\n    temp_1 = i;\r\n    let temp_1y = j;\r\n    temp_2 = i;\r\n    let temp_2y = j;\r\n    while (\r\n      this.state.matrix[temp_1][temp_1y] == status &&\r\n      temp_1 &&\r\n      temp_1y < this.props.n - 1\r\n    ) {\r\n      temp_1 -= 1;\r\n      temp_1y += 1;\r\n    }\r\n    if (this.state.matrix[temp_1][temp_1y] != status) {\r\n      temp_1 += 1;\r\n      temp_1y -= 1;\r\n    }\r\n\r\n    while (\r\n      this.state.matrix[temp_2][temp_2y] == status &&\r\n      temp_2 < this.props.n - 1 &&\r\n      temp_2y\r\n    ) {\r\n      temp_2 += 1;\r\n      temp_2y -= 1;\r\n    }\r\n    if (this.state.matrix[temp_2][temp_2y] != status) {\r\n      temp_2 -= 1;\r\n      temp_2y += 1;\r\n    }\r\n\r\n    console.log(temp_1, temp_2);\r\n    if (temp_2 - temp_1 + 1 >= 5) {\r\n      setTimeout(() => {\r\n        alert('获胜者出现啦！是' + (status == 1 ? '白棋选手' : '黑棋选手'));\r\n        location.reload();\r\n      });\r\n    }\r\n\r\n    // 第4个方向 -45度方向\r\n    temp_1 = i;\r\n    temp_1y = j;\r\n    temp_2 = i;\r\n    temp_2y = j;\r\n    while (this.state.matrix[temp_1][temp_1y] == status && temp_1 && temp_1y) {\r\n      temp_1 -= 1;\r\n      temp_1y -= 1;\r\n    }\r\n    if (this.state.matrix[temp_1][temp_1y] != status) {\r\n      temp_1 += 1;\r\n      temp_1y += 1;\r\n    }\r\n\r\n    while (\r\n      this.state.matrix[temp_2][temp_2y] == status &&\r\n      temp_2 < this.props.n - 1 &&\r\n      temp_2y < this.props.n - 1\r\n    ) {\r\n      temp_2 += 1;\r\n      temp_2y += 1;\r\n    }\r\n    if (this.state.matrix[temp_2][temp_2y] != status) {\r\n      temp_2 -= 1;\r\n      temp_2y -= 1;\r\n    }\r\n\r\n    console.log(temp_1, temp_2);\r\n    if (temp_2 - temp_1 + 1 >= 5) {\r\n      setTimeout(() => {\r\n        alert('获胜者出现啦！是' + (status == 1 ? '白棋选手' : '黑棋选手'));\r\n        location.reload();\r\n      });\r\n    }\r\n  }\r\n\r\n  // 设置棋盘状态\r\n  setCheckStatus(i, j, status) {\r\n    // console.log('dsadsa', this.state.matrix[i][j], status);\r\n    // 表示该位置已经有棋，还想下一个棋\r\n    if (this.state.matrix[i][j] != 0 && status != 0) {\r\n      console.log('胡放呢？该位置已经下过了哦');\r\n      return;\r\n    }\r\n    this.matrix[i][j] = status;\r\n    this.setState({\r\n      matrix: this.matrix,\r\n    });\r\n\r\n    if (status == 0) {\r\n      // 说明现在是在悔棋呢 悔了之后状态到前一个了 也不同检测是否分出胜负 因为肯定没有\r\n      // 不用检验前面是否分出胜负\r\n      // 但是现在该下棋的人是那个悔棋的人\r\n      // 且要将悔棋的记录压入栈\r\n      // 并在下棋记录栈中弹出最近的一次下棋记录\r\n      this.state.now = -this.state.now;\r\n      this.state.regret_record.push([i, j, this.state.now]);\r\n      // this.state.record.pop();\r\n      return;\r\n    }\r\n\r\n    // 将这位棋手的下棋记录压栈\r\n    this.state.record.push([i, j, status]);\r\n\r\n    // 检验是否分出胜负\r\n    this.examine(i, j, status);\r\n\r\n    // 该对方棋手出棋\r\n    this.state.now = -this.state.now;\r\n\r\n    // 人机模式\r\n    if (this.state.now == 1 && this.props.clickedMode != 1) {\r\n      this.human_computer();\r\n    }\r\n\r\n    // console.log(this.state.matrix);\r\n  }\r\n\r\n  // 悔棋\r\n  regret(status) {\r\n    // 如果玩家A想悔棋，但是玩家B已经下棋子了，那就不能悔咯，所以要保证下棋记录栈中的栈顶是status玩家的记录\r\n    // 除此之外 悔棋的话已悔栈中一定要是空的才行\r\n    let len = this.state.record.length;\r\n    if (\r\n      len &&\r\n      this.state.record[len - 1][2] == status &&\r\n      this.state.regret_record.length == 0\r\n    ) {\r\n      // 可以悔棋\r\n      const temp = this.state.record.pop();\r\n      this.setCheckStatus(temp[0], temp[1], 0);\r\n    } else {\r\n      alert('您当前不可悔棋哦');\r\n    }\r\n  }\r\n\r\n  // 撤销悔棋\r\n  revoke(status) {\r\n    const len = this.state.regret_record.length;\r\n    if (len && this.state.regret_record[len - 1][2] == status) {\r\n      const temp = this.state.regret_record.pop();\r\n      this.setCheckStatus(temp[0], temp[1], status);\r\n    } else {\r\n      alert('与你无瓜 你撤啥?');\r\n    }\r\n  }\r\n\r\n  // 下面是人机对战的思路啦，用户可以优先选择是下黑子还是白子\r\n  // 因为在五子棋中是黑子先行\r\n  human_computer() {\r\n    // -1代表黑棋选手，1代表白棋选手\r\n    let hm = {};\r\n    hm[1] = 10;\r\n    hm[11] = 100;\r\n    hm[111] = 5000;\r\n    hm[1111] = 8000;\r\n\r\n    hm[12] = 5;\r\n    hm[112] = 80;\r\n    hm[1112] = 3000;\r\n    hm[11112] = 10000;\r\n\r\n    hm[21] = 11;\r\n    hm[211] = 110;\r\n    hm[2111] = 1100;\r\n    hm[21111] = 11000;\r\n\r\n    hm[2] = 20;\r\n    hm[22] = 200;\r\n    hm[222] = 4500;\r\n    hm[2222] = 10000;\r\n\r\n    hm[221] = 100;\r\n    hm[2221] = 3000;\r\n    hm[22221] = 12000;\r\n    hm[122] = 5;\r\n    hm[1222] = 500;\r\n    hm[12222] = 10000;\r\n\r\n    let values = [];\r\n    let ar = [];\r\n    ar = this.state.matrix.map((item) => {\r\n      return item.map((element) => {\r\n        if (element == -1) {\r\n          return 1;\r\n        } else if (element == 1) {\r\n          return 2;\r\n        } else {\r\n          return 0;\r\n        }\r\n      });\r\n    });\r\n    for (let i = 0; i < this.props.n; i++) {\r\n      values.push([]);\r\n      for (let j = 0; j < this.props.n; j++) {\r\n        values[i].push(0);\r\n        if (ar[i][j] == 0) {\r\n          // 这里是一个没有棋子的点\r\n          let code = '';\r\n          let color = 0;\r\n          for (let k = i + 1; k < this.props.n; k++) {\r\n            if (ar[k][j] == 0) {\r\n              break;\r\n            } else {\r\n              if (color == 0) {\r\n                color = ar[k][j];\r\n                code += ar[k][j];\r\n              } else if (color == ar[k][j]) {\r\n                code += ar[k][j];\r\n              } else {\r\n                code += ar[k][j];\r\n                break;\r\n              }\r\n            }\r\n          }\r\n\r\n          let num = hm[code];\r\n          if (num) {\r\n            values[i][j] += num;\r\n          }\r\n\r\n          // 向左\r\n          code = '';\r\n          color = 0;\r\n          for (let k = i - 1; k > 0; k--) {\r\n            //向左开始时遍历\r\n            if (ar[k][j] == 0) {\r\n              break;\r\n            } else {\r\n              if (color == 0) {\r\n                color = ar[k][j];\r\n                code += ar[k][j];\r\n              } else if (color == ar[k][j]) {\r\n                code += ar[k][j];\r\n              } else {\r\n                code += ar[k][j];\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          num = hm[code];\r\n          if (num) {\r\n            values[i][j] += num;\r\n          }\r\n\r\n          code = '';\r\n          color = 0;\r\n          for (let k = j - 1; k > 0; k--) {\r\n            //向上开始时遍历\r\n            if (ar[i][k] == 0) {\r\n              break;\r\n            } else {\r\n              if (color == 0) {\r\n                color = ar[i][k];\r\n                code += ar[i][k];\r\n              } else if (color == ar[i][k]) {\r\n                code += ar[i][k];\r\n              } else {\r\n                code += ar[i][k];\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          num = hm[code];\r\n          if (num) {\r\n            values[i][j] += num;\r\n          }\r\n\r\n          code = '';\r\n          color = 0;\r\n          for (let k = j + 1; k < ar.length; k++) {\r\n            //向下开始时遍历\r\n            if (ar[i][k] == 0) {\r\n              break;\r\n            } else {\r\n              if (color == 0) {\r\n                color = ar[i][k];\r\n                code += ar[i][k];\r\n              } else if (color == ar[i][k]) {\r\n                code += ar[i][k];\r\n              } else {\r\n                code += ar[i][k];\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          num = hm[code];\r\n          if (num) {\r\n            values[i][j] += num;\r\n          }\r\n\r\n          code = '';\r\n          color = 0;\r\n          for (let o = i - 1, k = j - 1; k > 0 && o > 0; k--, o--) {\r\n            //向左上开始时遍历\r\n            if (ar[o][k] == 0) {\r\n              break;\r\n            } else {\r\n              if (color == 0) {\r\n                color = ar[o][k];\r\n                code += ar[o][k];\r\n              } else if (color == ar[o][k]) {\r\n                code += ar[o][k];\r\n              } else {\r\n                code += ar[o][k];\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          num = hm[code];\r\n          if (num) {\r\n            values[i][j] += num;\r\n          }\r\n\r\n          code = '';\r\n          color = 0;\r\n          for (let o = i + 1, k = j - 1; k > 0 && o < ar.length; k--, o++) {\r\n            //向右上开始时遍历\r\n            if (ar[o][k] == 0) {\r\n              break;\r\n            } else {\r\n              if (color == 0) {\r\n                color = ar[o][k];\r\n                code += ar[o][k];\r\n              } else if (color == ar[o][k]) {\r\n                code += ar[o][k];\r\n              } else {\r\n                code += ar[o][k];\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          num = hm[code];\r\n          if (num) {\r\n            values[i][j] += num;\r\n          }\r\n\r\n          code = '';\r\n          color = 0;\r\n          for (\r\n            let o = i + 1, k = j + 1;\r\n            k < ar.length && o < ar.length;\r\n            k++, o++\r\n          ) {\r\n            //向右下开始时遍历\r\n            if (ar[o][k] == 0) {\r\n              break;\r\n            } else {\r\n              if (color == 0) {\r\n                color = ar[o][k];\r\n                code += ar[o][k];\r\n              } else if (color == ar[o][k]) {\r\n                code += ar[o][k];\r\n              } else {\r\n                code += ar[o][k];\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          num = hm[code];\r\n          if (num) {\r\n            values[i][j] += num;\r\n          }\r\n\r\n          code = '';\r\n          color = 0;\r\n          for (let o = i - 1, k = j + 1; k < ar.length && o > 0; k++, o--) {\r\n            //向左下开始时遍历\r\n            if (ar[o][k] == 0) {\r\n              break;\r\n            } else {\r\n              if (color == 0) {\r\n                color = ar[o][k];\r\n                code += ar[o][k];\r\n              } else if (color == ar[o][k]) {\r\n                code += ar[o][k];\r\n              } else {\r\n                code += ar[o][k];\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          num = hm[code];\r\n          if (num) {\r\n            values[i][j] += num;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    console.log(values);\r\n    let max = 0;\r\n    let goalx = 0;\r\n    let goaly = 0;\r\n    for (let i = 0; i < this.state.matrix.length; i++) {\r\n      for (let j = 0; j < this.state.matrix.length; j++) {\r\n        if (values[i][j] > max) {\r\n          max = values[i][j];\r\n          goalx = i;\r\n          goaly = j;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setCheckStatus(goalx, goaly, 1);\r\n  }\r\n}\r\n\r\nexport default Checkboard;\r\n","import React from 'react';\r\n\r\nimport MyHeader from './MyHeader';\r\nimport CheckBoard from './CheckBoard copy';\r\n\r\nclass Wrapper extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    // clickedMode用来表示当前选择的状态对战状态\r\n    // 1为双人对战\r\n    // 2为人机对战\r\n    // 同时该属性还用来判断是否展示选择框\r\n    // 3为不展示选择框 其余值（1,2）都是展示选择框\r\n    this.state = {\r\n      clickedMode: 3,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <MyHeader\r\n          clickedMode={this.state.clickedMode}\r\n          onChangeClickedMode={this.handleChangeClickedMode.bind(this)}\r\n        />\r\n        <CheckBoard n={10} first={-1} clickedMode={this.state.clickedMode} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleChangeClickedMode(value) {\r\n    console.log('das', value);\r\n    this.setState({\r\n      clickedMode: value,\r\n      dsad: 'dasdsa',\r\n    });\r\n    this.forceUpdate();\r\n    console.log(this, this.state, this.state.clickedMode);\r\n    // this.forceUpdate();\r\n  }\r\n}\r\n\r\nexport default Wrapper;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './com/Wrapper';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}