{"version":3,"sources":["com/MyHeader.js","com/CheckBoard.js","com/Wrapper.js","reportWebVitals.js","index.js"],"names":["MyHeader","state","clickedMode","href","onClick","this","modeChoose","bind","className","flag","e","console","log","setState","target","up","React","Component","Checkboard","props","matrix","i","n","push","j","scores","now","first","record","regret_record","socres","choose","ori","regret","revoke","togglechoose","map","item","index","length","help","width","height","handleClickCanvas","itemj","indexj","x","y","radius","fill","colorOfCanvasplot","call","zind","stroke","evt","offsetY","offsetX","Math","floor","setCheckStatus","forceUpdate","ar","getClass","status","temp_1","temp_2","setTimeout","alert","location","reload","temp_1y","temp_2y","examine","human_computer","len","temp","pop","hm","values","element","code","color","k","num","o","max","goalx","goaly","Wrapper","test","tagName","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.acc29d20.chunk.js","sourcesContent":["import React from 'react';\r\nclass MyHeader extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      clickedMode: 3,\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <header>\r\n        <section>\r\n          <a href='https://github.com/lsdyi/lsdyi.github.io'>仓库地址</a>\r\n        </section>\r\n        <section>\r\n          <a onClick={this.modeChoose.bind(this, 4)}>模式选择</a>\r\n          <ul className={this.state.clickedMode == 4 ? 'show' : 'hidden'}>\r\n            <li onClick={this.modeChoose.bind(this, 1)}>双人对战</li>\r\n            <li onClick={this.modeChoose.bind(this, 2)}>挑战人机</li>\r\n            <li onClick={this.modeChoose.bind(this, 3)}>取消</li>\r\n          </ul>\r\n        </section>\r\n      </header>\r\n    );\r\n  }\r\n\r\n  modeChoose(flag, e) {\r\n    console.log(this);\r\n    this.setState({\r\n      clickedMode: flag,\r\n    });\r\n    e.target.up = flag;\r\n  }\r\n}\r\n\r\nexport default MyHeader;\r\n","import React from 'react';\r\n\r\nimport { Stage, Layer, Group, Rect, Circle } from 'react-konva';\r\nimport Konva from 'konva';\r\n\r\nimport './CheckBoard.css';\r\nclass Checkboard extends React.Component {\r\n  // n是棋局的长宽大小\r\n  constructor(props) {\r\n    super(props);\r\n    this.matrix = [];\r\n    for (let i = 0; i < this.props.n; i++) {\r\n      this.matrix.push([]);\r\n      for (let j = 0; j < this.props.n; j++) {\r\n        this.matrix[i].push(0);\r\n      }\r\n    }\r\n\r\n    this.scores = [];\r\n    for (let i = 0; i < this.props.n; i++) {\r\n      this.scores.push([]);\r\n      for (let j = 0; j < this.props.n; j++) {\r\n        this.scores[i].push(0);\r\n      }\r\n    }\r\n\r\n    // record是下棋子的记录 具有栈的特性 用于悔棋 其中的元素一个三元数组\r\n    // i，j，status 表示status棋手在（i，j）位置下棋\r\n    // regret_record是悔棋记录 也是栈的特性 用于撤销悔棋，其中的元素也是三元组\r\n    // choose表示是用DOM还是用canvas\r\n    this.state = {\r\n      matrix: this.matrix,\r\n      now: this.props.first,\r\n      record: [],\r\n      regret_record: [],\r\n\r\n      socres: this.scores,\r\n\r\n      choose: 1,\r\n\r\n      ori: 'palegoldenrod',\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='container'>\r\n        <div className='left'>\r\n          <h1>\r\n            黑棋选手：\r\n            <br />\r\n            {this.props.clickedMode != 1 ? '用户' : ''}\r\n            {this.state.now == -1 ? '下棋' : '等待'}\r\n          </h1>\r\n          <div className={this.props.clickedMode != 1 ? 'hidden' : ''}>\r\n            <button className='revoke' onClick={this.regret.bind(this, -1)}>\r\n              我要悔棋\r\n            </button>\r\n            <button className='revoke' onClick={this.revoke.bind(this, -1)}>\r\n              算了还是不悔了\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className='middle'>\r\n          <div className='choosebuttons'>\r\n            <button\r\n              onClick={this.togglechoose.bind(this, 1)}\r\n              className={`choose ${this.state.choose == 1 ? 'beenchosen' : ''}`}\r\n            >\r\n              DOM\r\n            </button>\r\n            <button\r\n              onClick={this.togglechoose.bind(this, 2)}\r\n              className={`choose ${this.state.choose == 2 ? 'beenchosen' : ''}`}\r\n            >\r\n              canvas\r\n            </button>\r\n          </div>\r\n          <div className={`border ${this.state.choose == 1 ? '' : 'hidden'}`}>\r\n            {this.state.matrix.map((item, index) => {\r\n              return (\r\n                <div\r\n                  className={`row ${\r\n                    index === this.state.matrix.length - 1 ? 'lastrow' : ''\r\n                  }`}\r\n                  key={index}\r\n                >\r\n                  {this.help(item, index)}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <Stage\r\n            width={500}\r\n            height={500}\r\n            className={`mycanvas border ${\r\n              this.state.choose == 2 ? '' : 'hidden'\r\n            }`}\r\n            onClick={this.handleClickCanvas.bind(this)}\r\n          >\r\n            <Layer>\r\n              {this.state.matrix.map((item, index) => {\r\n                return item.map((itemj, indexj) => {\r\n                  if (\r\n                    index == this.matrix.length - 1 ||\r\n                    indexj == item.length - 1\r\n                  ) {\r\n                    return (\r\n                      <Circle\r\n                        key={index + ' ' + indexj}\r\n                        x={14 + indexj * 52}\r\n                        y={14 + index * 52}\r\n                        radius={14}\r\n                        fill={this.colorOfCanvasplot.call(this, index, indexj)}\r\n                      />\r\n                    );\r\n                  }\r\n                  return (\r\n                    <Group key={index + ' ' + indexj}>\r\n                      <Rect\r\n                        zind\r\n                        x={14 + indexj * 52}\r\n                        y={14 + index * 52}\r\n                        height={52}\r\n                        width={52}\r\n                        stroke='black'\r\n                      />\r\n\r\n                      <Circle\r\n                        x={14 + indexj * 52}\r\n                        y={14 + index * 52}\r\n                        radius={14}\r\n                        fill={this.colorOfCanvasplot.call(this, index, indexj)}\r\n                      />\r\n                    </Group>\r\n                  );\r\n                });\r\n              })}\r\n            </Layer>\r\n          </Stage>\r\n        </div>\r\n\r\n        <div className='right'>\r\n          <h1>\r\n            白棋选手：\r\n            <br />\r\n            {this.props.clickedMode != 1 ? '计算机' : ''}\r\n            {this.state.now == 1 ? '下棋' : '等待'}\r\n          </h1>\r\n          <div className={this.props.clickedMode != 1 ? 'hidden' : ''}>\r\n            <button className='revoke' onClick={this.regret.bind(this, 1)}>\r\n              我要悔棋\r\n            </button>\r\n            <button className='revoke' onClick={this.revoke.bind(this, 1)}>\r\n              算了还是不悔了\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleClickCanvas(e) {\r\n    let x = e.evt.offsetY;\r\n    let y = e.evt.offsetX;\r\n    // console.log(x, y);\r\n    let [i, j] = [Math.floor((x + 14) / 52), Math.floor((y + 14) / 52)];\r\n\r\n    this.setCheckStatus(i, j, this.state.now);\r\n  }\r\n\r\n  colorOfCanvasplot(i, j) {\r\n    if (this.state.matrix[i][j] == 1) {\r\n      return 'white';\r\n    } else if (this.state.matrix[i][j] == -1) {\r\n      return 'black';\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n  togglechoose(choose) {\r\n    this.state.choose = choose;\r\n\r\n    // 渲染机制没有检测到发生变化的数据 ？？？强制刷新一下\r\n    this.forceUpdate();\r\n  }\r\n  getClass(item) {\r\n    if (item == 0) {\r\n      return '';\r\n    } else if (item == 1) {\r\n      return 'white';\r\n    } else {\r\n      return 'black';\r\n    }\r\n  }\r\n  // 渲染二维数组 我yue了\r\n  help(ar, i) {\r\n    return ar.map((item, index) => {\r\n      return (\r\n        <span\r\n          className={this.getClass(item)}\r\n          key={index}\r\n          onClick={this.setCheckStatus.bind(this, i, index, this.state.now)}\r\n        ></span>\r\n      );\r\n    });\r\n  }\r\n\r\n  // 检验棋局是否有胜负\r\n  examine(i, j, status) {\r\n    // 第1个方向 0度方向\r\n    let temp_1 = j;\r\n    let temp_2 = j;\r\n    while (this.state.matrix[i][temp_1] == status && temp_1) {\r\n      temp_1 -= 1;\r\n    }\r\n    if (this.state.matrix[i][temp_1] != status) {\r\n      temp_1 += 1;\r\n    }\r\n\r\n    while (\r\n      this.state.matrix[i][temp_2] == status &&\r\n      temp_2 < this.props.n - 1\r\n    ) {\r\n      temp_2 += 1;\r\n    }\r\n    if (this.state.matrix[i][temp_2] != status) {\r\n      temp_2 -= 1;\r\n    }\r\n    console.log(temp_1, temp_2);\r\n    if (temp_2 - temp_1 + 1 >= 5) {\r\n      setTimeout(() => {\r\n        alert('获胜者出现啦！是' + (status == 1 ? '白棋选手' : '黑棋选手'));\r\n        location.reload();\r\n      });\r\n    }\r\n\r\n    // 第2个方向 90度方向\r\n    temp_1 = i;\r\n    temp_2 = i;\r\n    while (this.state.matrix[temp_1][j] == status && temp_1) {\r\n      temp_1 -= 1;\r\n    }\r\n    if (this.state.matrix[temp_1][j] != status) {\r\n      temp_1 += 1;\r\n    }\r\n\r\n    while (\r\n      this.state.matrix[temp_2][j] == status &&\r\n      temp_2 < this.props.n - 1\r\n    ) {\r\n      temp_2 += 1;\r\n    }\r\n    if (this.state.matrix[temp_2][j] != status) {\r\n      temp_2 -= 1;\r\n    }\r\n\r\n    console.log(temp_1, temp_2);\r\n    if (temp_2 - temp_1 + 1 >= 5) {\r\n      setTimeout(() => {\r\n        alert('获胜者出现啦！是' + (status == 1 ? '白棋选手' : '黑棋选手'));\r\n        location.reload();\r\n      });\r\n    }\r\n\r\n    // 第3个方向 45度方向\r\n    temp_1 = i;\r\n    let temp_1y = j;\r\n    temp_2 = i;\r\n    let temp_2y = j;\r\n    while (\r\n      this.state.matrix[temp_1][temp_1y] == status &&\r\n      temp_1 &&\r\n      temp_1y < this.props.n - 1\r\n    ) {\r\n      temp_1 -= 1;\r\n      temp_1y += 1;\r\n    }\r\n    if (this.state.matrix[temp_1][temp_1y] != status) {\r\n      temp_1 += 1;\r\n      temp_1y -= 1;\r\n    }\r\n\r\n    while (\r\n      this.state.matrix[temp_2][temp_2y] == status &&\r\n      temp_2 < this.props.n - 1 &&\r\n      temp_2y\r\n    ) {\r\n      temp_2 += 1;\r\n      temp_2y -= 1;\r\n    }\r\n    if (this.state.matrix[temp_2][temp_2y] != status) {\r\n      temp_2 -= 1;\r\n      temp_2y += 1;\r\n    }\r\n\r\n    console.log(temp_1, temp_2);\r\n    if (temp_2 - temp_1 + 1 >= 5) {\r\n      setTimeout(() => {\r\n        alert('获胜者出现啦！是' + (status == 1 ? '白棋选手' : '黑棋选手'));\r\n        location.reload();\r\n      });\r\n    }\r\n\r\n    // 第4个方向 -45度方向\r\n    temp_1 = i;\r\n    temp_1y = j;\r\n    temp_2 = i;\r\n    temp_2y = j;\r\n    while (this.state.matrix[temp_1][temp_1y] == status && temp_1 && temp_1y) {\r\n      temp_1 -= 1;\r\n      temp_1y -= 1;\r\n    }\r\n    if (this.state.matrix[temp_1][temp_1y] != status) {\r\n      temp_1 += 1;\r\n      temp_1y += 1;\r\n    }\r\n\r\n    while (\r\n      this.state.matrix[temp_2][temp_2y] == status &&\r\n      temp_2 < this.props.n - 1 &&\r\n      temp_2y < this.props.n - 1\r\n    ) {\r\n      temp_2 += 1;\r\n      temp_2y += 1;\r\n    }\r\n    if (this.state.matrix[temp_2][temp_2y] != status) {\r\n      temp_2 -= 1;\r\n      temp_2y -= 1;\r\n    }\r\n\r\n    console.log(temp_1, temp_2);\r\n    if (temp_2 - temp_1 + 1 >= 5) {\r\n      setTimeout(() => {\r\n        alert('获胜者出现啦！是' + (status == 1 ? '白棋选手' : '黑棋选手'));\r\n        location.reload();\r\n      });\r\n    }\r\n  }\r\n\r\n  setCheckStatus(i, j, status) {\r\n    // console.log(i, j, status);\r\n    // 复盘的时候加上参数校验的步骤\r\n    console.log('dsadsa', this.state.matrix[i][j], status);\r\n    if (this.state.matrix[i][j] != 0 && status != 0) {\r\n      console.log('胡放呢？');\r\n      return;\r\n    }\r\n    this.matrix[i][j] = status;\r\n    this.setState({\r\n      matrix: this.matrix,\r\n    });\r\n\r\n    if (status == 0) {\r\n      // 说明现在是在悔棋呢 悔了之后状态到前一个了\r\n      // 不用检验前面是否分出胜负 但是现在该下棋的人是那个悔棋的人\r\n      this.state.now = -this.state.now;\r\n      return;\r\n    }\r\n\r\n    // 将这位棋手的下棋记录压栈\r\n    this.state.record.push([i, j, status]);\r\n\r\n    // 下棋之后检验是否分出胜负\r\n    this.examine(i, j, status);\r\n    // 该对方棋手出棋\r\n    this.state.now = -this.state.now;\r\n\r\n    // 人机模式\r\n    if (this.state.now == 1 && this.props.clickedMode != 1) {\r\n      this.human_computer();\r\n    }\r\n\r\n    console.log(this.state.matrix);\r\n  }\r\n\r\n  // 悔棋\r\n  regret(status) {\r\n    // 如果玩家A想悔棋，但是玩家B已经下棋子了，那就不能悔咯\r\n    let len = this.state.record.length;\r\n    // 悔棋的话已悔栈中一定要是空的才行\r\n    if (\r\n      len &&\r\n      this.state.record[len - 1][2] == status &&\r\n      this.state.regret_record.length == 0\r\n    ) {\r\n      // 可以悔棋\r\n      const temp = this.state.record.pop();\r\n      this.setCheckStatus(temp[0], temp[1], 0);\r\n\r\n      // 将悔棋的这一操作压入悔棋栈中\r\n      this.state.regret_record.push([temp[0], temp[1], status]);\r\n    } else {\r\n      alert('您当前不可悔棋哦');\r\n    }\r\n  }\r\n\r\n  // 撤销悔棋\r\n  revoke(status) {\r\n    const len = this.state.regret_record.length;\r\n    if (len && this.state.regret_record[len - 1][2] == status) {\r\n      const temp = this.state.regret_record.pop();\r\n      this.setCheckStatus(temp[0], temp[1], status);\r\n    } else {\r\n      alert('与你无瓜 你撤啥?');\r\n    }\r\n  }\r\n\r\n  // 下面是人机对战的思路啦，用户可以优先选择是下黑子还是白子\r\n  // 因为在五子棋中是黑子先行\r\n  human_computer() {\r\n    // -1代表黑棋选手，1代表白棋选手\r\n    let hm = {};\r\n    hm[1] = 10;\r\n    hm[11] = 100;\r\n    hm[111] = 5000;\r\n    hm[1111] = 8000;\r\n\r\n    hm[12] = 5;\r\n    hm[112] = 80;\r\n    hm[1112] = 3000;\r\n    hm[11112] = 10000;\r\n\r\n    hm[21] = 11;\r\n    hm[211] = 110;\r\n    hm[2111] = 1100;\r\n    hm[21111] = 11000;\r\n\r\n    hm[2] = 20;\r\n    hm[22] = 200;\r\n    hm[222] = 4500;\r\n    hm[2222] = 10000;\r\n\r\n    hm[221] = 100;\r\n    hm[2221] = 3000;\r\n    hm[22221] = 12000;\r\n    hm[122] = 5;\r\n    hm[1222] = 500;\r\n    hm[12222] = 10000;\r\n\r\n    let values = [];\r\n    let ar = [];\r\n    ar = this.state.matrix.map((item) => {\r\n      return item.map((element) => {\r\n        if (element == -1) {\r\n          return 1;\r\n        } else if (element == 1) {\r\n          return 2;\r\n        } else {\r\n          return 0;\r\n        }\r\n      });\r\n    });\r\n    for (let i = 0; i < this.props.n; i++) {\r\n      values.push([]);\r\n      for (let j = 0; j < this.props.n; j++) {\r\n        values[i].push(0);\r\n        if (ar[i][j] == 0) {\r\n          // 这里是一个没有棋子的点\r\n          let code = '';\r\n          let color = 0;\r\n          for (let k = i + 1; k < this.props.n; k++) {\r\n            if (ar[k][j] == 0) {\r\n              break;\r\n            } else {\r\n              if (color == 0) {\r\n                color = ar[k][j];\r\n                code += ar[k][j];\r\n              } else if (color == ar[k][j]) {\r\n                code += ar[k][j];\r\n              } else {\r\n                code += ar[k][j];\r\n                break;\r\n              }\r\n            }\r\n          }\r\n\r\n          let num = hm[code];\r\n          if (num) {\r\n            values[i][j] += num;\r\n          }\r\n\r\n          // 向左\r\n          code = '';\r\n          color = 0;\r\n          for (let k = i - 1; k > 0; k--) {\r\n            //向左开始时遍历\r\n            if (ar[k][j] == 0) {\r\n              break;\r\n            } else {\r\n              if (color == 0) {\r\n                color = ar[k][j];\r\n                code += ar[k][j];\r\n              } else if (color == ar[k][j]) {\r\n                code += ar[k][j];\r\n              } else {\r\n                code += ar[k][j];\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          num = hm[code];\r\n          if (num) {\r\n            values[i][j] += num;\r\n          }\r\n\r\n          code = '';\r\n          color = 0;\r\n          for (let k = j - 1; k > 0; k--) {\r\n            //向上开始时遍历\r\n            if (ar[i][k] == 0) {\r\n              break;\r\n            } else {\r\n              if (color == 0) {\r\n                color = ar[i][k];\r\n                code += ar[i][k];\r\n              } else if (color == ar[i][k]) {\r\n                code += ar[i][k];\r\n              } else {\r\n                code += ar[i][k];\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          num = hm[code];\r\n          if (num) {\r\n            values[i][j] += num;\r\n          }\r\n\r\n          code = '';\r\n          color = 0;\r\n          for (let k = j + 1; k < ar.length; k++) {\r\n            //向下开始时遍历\r\n            if (ar[i][k] == 0) {\r\n              break;\r\n            } else {\r\n              if (color == 0) {\r\n                color = ar[i][k];\r\n                code += ar[i][k];\r\n              } else if (color == ar[i][k]) {\r\n                code += ar[i][k];\r\n              } else {\r\n                code += ar[i][k];\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          num = hm[code];\r\n          if (num) {\r\n            values[i][j] += num;\r\n          }\r\n\r\n          code = '';\r\n          color = 0;\r\n          for (let o = i - 1, k = j - 1; k > 0 && o > 0; k--, o--) {\r\n            //向左上开始时遍历\r\n            if (ar[o][k] == 0) {\r\n              break;\r\n            } else {\r\n              if (color == 0) {\r\n                color = ar[o][k];\r\n                code += ar[o][k];\r\n              } else if (color == ar[o][k]) {\r\n                code += ar[o][k];\r\n              } else {\r\n                code += ar[o][k];\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          num = hm[code];\r\n          if (num) {\r\n            values[i][j] += num;\r\n          }\r\n\r\n          code = '';\r\n          color = 0;\r\n          for (let o = i + 1, k = j - 1; k > 0 && o < ar.length; k--, o++) {\r\n            //向右上开始时遍历\r\n            if (ar[o][k] == 0) {\r\n              break;\r\n            } else {\r\n              if (color == 0) {\r\n                color = ar[o][k];\r\n                code += ar[o][k];\r\n              } else if (color == ar[o][k]) {\r\n                code += ar[o][k];\r\n              } else {\r\n                code += ar[o][k];\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          num = hm[code];\r\n          if (num) {\r\n            values[i][j] += num;\r\n          }\r\n\r\n          code = '';\r\n          color = 0;\r\n          for (\r\n            let o = i + 1, k = j + 1;\r\n            k < ar.length && o < ar.length;\r\n            k++, o++\r\n          ) {\r\n            //向右下开始时遍历\r\n            if (ar[o][k] == 0) {\r\n              break;\r\n            } else {\r\n              if (color == 0) {\r\n                color = ar[o][k];\r\n                code += ar[o][k];\r\n              } else if (color == ar[o][k]) {\r\n                code += ar[o][k];\r\n              } else {\r\n                code += ar[o][k];\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          num = hm[code];\r\n          if (num) {\r\n            values[i][j] += num;\r\n          }\r\n\r\n          code = '';\r\n          color = 0;\r\n          for (let o = i - 1, k = j + 1; k < ar.length && o > 0; k++, o--) {\r\n            //向左下开始时遍历\r\n            if (ar[o][k] == 0) {\r\n              break;\r\n            } else {\r\n              if (color == 0) {\r\n                color = ar[o][k];\r\n                code += ar[o][k];\r\n              } else if (color == ar[o][k]) {\r\n                code += ar[o][k];\r\n              } else {\r\n                code += ar[o][k];\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          num = hm[code];\r\n          if (num) {\r\n            values[i][j] += num;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    console.log(values);\r\n    let max = 0;\r\n    let goalx = 0;\r\n    let goaly = 0;\r\n    for (let i = 0; i < this.state.matrix.length; i++) {\r\n      for (let j = 0; j < this.state.matrix.length; j++) {\r\n        if (values[i][j] > max) {\r\n          max = values[i][j];\r\n          goalx = i;\r\n          goaly = j;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setCheckStatus(goalx, goaly, 1);\r\n  }\r\n}\r\n\r\nexport default Checkboard;\r\n","import React from 'react';\r\n\r\nimport MyHeader from './MyHeader';\r\nimport CheckBoard from './CheckBoard';\r\n\r\nclass Wrapper extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      clickedMode: 3,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div onClick={this.test.bind(this)}>\r\n        <MyHeader />\r\n        <CheckBoard n={10} first={-1} clickedMode={this.state.clickedMode} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  test(e) {\r\n    if (e.target.tagName === 'LI') {\r\n      // 这样就把子组件中的state给传过来了\r\n      this.setState({\r\n        clickedMode: e.target.up,\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default Wrapper;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './com/Wrapper';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}