<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>Page Title</title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style>
      #canvas {
        display: block;
        margin: 150px auto;
        box-shadow: -2px -2px 2px #efefef, 5px 5px 5px #b9b9b9;
      }

      .dialog {
        position: absolute;
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: column;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        margin: auto;
        width: 450px;
        height: 450px;
        font-size: 24px;
        line-height: 200px;
        text-align: center;
      }

      .res {
        width: 200px;
        height: 80px;
        line-height: 80px;
        color: blue;
        font-size: 38px;
        font-weight: bold;
        text-align: center;
      }

      .regame,
      .quit {
        width: 200px;
        height: 80px;
        line-height: 80px;
        color: #fff;
        opacity: 0.8;
        cursor: pointer;
        background-color: green;
      }

      .quit:hover {
        opacity: 1;
      }

      .regame:hover {
        opacity: 1;
      }

      .quit {
        margin-top: 20px;
        background-color: red;
      }
    </style>
  </head>
  <body>
    <canvas id="canvas" width="450px" height="450px"></canvas>
    <script>
      var chessBoard = [];
      var wins = [];
      var me = true;
      var over = false;
      var count = 0;
      var myWin = [];
      var computerWin = [];

      for (var i = 0; i < 15; i++) {
        chessBoard[i] = [];
        for (var j = 0; j < 15; j++) {
          chessBoard[i][j] = 0;
        }
      }
      for (var i = 0; i < 15; i++) {
        wins[i] = [];
        for (var j = 0; j < 15; j++) {
          wins[i][j] = [];
        }
      }
      for (var i = 0; i < 15; i++) {
        for (var j = 0; j < 11; j++) {
          for (var k = 0; k < 5; k++) {
            wins[i][j + k][count] = true;
          }
          count++;
        }
      }
      for (var i = 0; i < 15; i++) {
        for (var j = 0; j < 11; j++) {
          for (var k = 0; k < 5; k++) {
            wins[j + k][i][count] = true;
          }
          count++;
        }
      }
      for (var i = 0; i < 11; i++) {
        for (var j = 0; j < 11; j++) {
          for (var k = 0; k < 5; k++) {
            wins[i + k][j + k][count] = true;
          }
          count++;
        }
      }
      for (var i = 0; i < 11; i++) {
        for (var j = 14; j > 3; j--) {
          for (var k = 0; k < 5; k++) {
            wins[i + k][j - k][count] = true;
          }
          count++;
        }
      }
      for (var i = 0; i < count; i++) {
        myWin[i] = 0;
        computerWin[i] = 0;
      }
      console.log(count);
      var canvas = document.getElementById('canvas'),
        ctx = canvas.getContext('2d');
      ctx.strokeStyle = '#bfbfbf';
      var drawChessBoard = function () {
        for (var i = 0; i < 15; i++) {
          ctx.moveTo(15 + i * 30, 15);
          ctx.lineTo(15 + i * 30, 435);
          ctx.stroke();
          ctx.moveTo(15, 15 + i * 30);
          ctx.lineTo(435, 15 + i * 30);
          ctx.stroke();
        }
      };
      drawChessBoard();
      var onStep = function (i, j, me) {
        ctx.beginPath();
        ctx.arc(15 + i * 30, 15 + j * 30, 13, 0, Math.PI * 2);
        var gradient = ctx.createRadialGradient(
          15 + i * 30 + 2,
          15 + j * 30 - 2,
          13,
          15 + i * 30 + 2,
          15 + j * 30 - 2,
          0
        );
        if (me) {
          gradient.addColorStop(0, '#0a0a0a');
          gradient.addColorStop(1, '#636766');
        } else {
          gradient.addColorStop(0, '#d1d1d1');
          gradient.addColorStop(1, '#f9f9f9');
        }
        ctx.fillStyle = gradient;
        ctx.fill();
        ctx.closePath();
      };
      canvas.addEventListener('touchend', function (e) {
        if (over) {
          return;
        }
        if (!me) {
          return;
        }
        var x = e.offsetX;
        var y = e.offsetY;
        var i = Math.floor(x / 30);
        var j = Math.floor(y / 30);
        if (chessBoard[i][j] == 0) {
          onStep(i, j, me);
          chessBoard[i][j] = 1;
          for (var k = 0; k < count; k++) {
            if (wins[i][j][k]) {
              myWin[k]++;
              computerWin[k] = 6;
              if (myWin[k] == 5) {
                over = true;
                alert('你输了!');
              }
            }
          }
          if (!over) {
            me = !me;
            computerAi();
          }
        }
      });
      canvas.addEventListener('click', function (e) {
        if (over) {
          return;
        }
        if (!me) {
          return;
        }
        var x = e.offsetX;
        var y = e.offsetY;
        var i = Math.floor(x / 30);
        var j = Math.floor(y / 30);
        if (chessBoard[i][j] == 0) {
          onStep(i, j, me);
          chessBoard[i][j] = 1;
          for (var k = 0; k < count; k++) {
            if (wins[i][j][k]) {
              myWin[k]++;
              computerWin[k] = 6;
              if (myWin[k] == 5) {
                over = true;
                alert('你赢了!');
              }
            }
          }
          if (!over) {
            me = !me;
            computerAi();
          }
        }
      });
      var computerAi = function () {
        var max = 0;
        var u = 0,
          v = 0;
        var myScore = [];
        var computerScore = [];
        for (var i = 0; i < 15; i++) {
          myScore[i] = [];
          computerScore[i] = [];
          for (var j = 0; j < 15; j++) {
            myScore[i][j] = 0;
            computerScore[i][j] = 0;
          }
        }

        for (var i = 0; i < 15; i++) {
          for (var j = 0; j < 15; j++) {
            if (chessBoard[i][j] == 0) {
              for (var k = 0; k < count; k++) {
                if (wins[i][j][k]) {
                  if (myWin[k] == 1) {
                    myScore[i][j] += 200;
                  } else if (myWin[k] == 2) {
                    myScore[i][j] += 400;
                  } else if (myWin[k] == 3) {
                    myScore[i][j] += 2000;
                  } else if (myWin[k] == 4) {
                    myScore[i][j] += 10000;
                  }
                  if (computerWin[k] == 1) {
                    computerScore[i][j] += 220;
                  } else if (computerWin[k] == 2) {
                    computerScore[i][j] += 420;
                  } else if (computerWin[k] == 3) {
                    computerScore[i][j] += 2200;
                  } else if (computerWin[k] == 4) {
                    computerScore[i][j] += 20000;
                  }
                }
              }
              if (myScore[i][j] > max) {
                max = myScore[i][j];
                u = i;
                v = j;
              } else if (myScore[i][j] == max) {
                if (computerScore[i][j] > computerScore[u][v]) {
                  u = i;
                  v = j;
                }
              }
              if (computerScore[i][j] > max) {
                max = computerScore[i][j];
                u = i;
                v = j;
              } else if (computerScore[i][j] == max) {
                if (myScore[i][j] > myScore[u][v]) {
                  u = i;
                  v = j;
                }
              }
            }
          }
        }
        onStep(u, v, false);
        chessBoard[u][v] = 2;
        for (var k = 0; k < count; k++) {
          if (wins[u][v][k]) {
            computerWin[k]++;
            myWin[k] = 6;
            if (computerWin[k] == 5) {
              over = true;
              alert('你输了');
            }
          }
        }
        if (!over) {
          me = !me;
        }
      };
    </script>
  </body>
</html>
